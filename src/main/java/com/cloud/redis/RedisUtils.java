package com.cloud.redis;import jakarta.annotation.Resource;import org.springframework.data.redis.core.RedisTemplate;import org.springframework.stereotype.Component;import java.util.concurrent.TimeUnit;/** * @Author zhouTao * @Date 2023/2/10 */@Componentpublic class RedisUtils {    @Resource    private RedisTemplate<String, String> redisTemplate;    /**     * 读取缓存     *     * @param key 键     * @return  值     */    public String get(String key) {        return redisTemplate.opsForValue().get(key);    }    /**     * 写入缓存     */    public boolean set(String key, String value , Long time , TimeUnit timeType) {        boolean result = false;        try {            redisTemplate.opsForValue().set(key, value, time , timeType);            result = true;        } catch (Exception e) {            e.printStackTrace();        }        return result;    }    /**     * 更新缓存     */    public boolean getAndSet(String key, String value) {        boolean result = false;        try {            redisTemplate.opsForValue().getAndSet(key, value);            result = true;        } catch (Exception e) {            e.printStackTrace();        }        return result;    }    /**     * 删除缓存     */    public boolean delete(String key) {        boolean result = false;        try {            redisTemplate.delete(key);            result = true;        } catch (Exception e) {            e.printStackTrace();        }        return result;    }}